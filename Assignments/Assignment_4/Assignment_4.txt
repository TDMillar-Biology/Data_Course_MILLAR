1. What other stuff does read.csv() do automatically?
read.csv automatically takes the first row as the column titles. 
It determines the number of columns by looking at the first 5 lines. 


2. How is it different from read.csv2()?
read.csv is used when you want to consider "." as the decimal and "," as the separation between two values
read.csv2 is used when you want to use "," as the decimal and ";" as the separation between two values


3. Why does read.csv2() even exist?
This is significant because in some foreign countries the custom is to use "," as the decimal point as opposed to ".".
In every South American country I have visited, this is the custom. 

4. How could I change the parameters of read.csv() to make it so the class of the “State” column is “factor” instead of “character?”

df <- read.csv("../../Data/landdata-states.csv", stringsAsFactors = TRUE)

5. What command would give the summary stats for ONLY the Home.Value column?

summary(df$Home.Value)

6. What value is returned by the command: names(df)[4] ?

"Home.Value"

7. What is happening when you add (…col=df$region) to the above plotting code?
In other words, what happens when you run: plot(x=df$Year,y=df$Land.Value,col=df$region)

col assigns colors to the data points. df$region itself is a factor, meaning that each value (Midwest, N. East, South, and West) has an assigned value of (1,2,3, and 4) respectively. This input is put into the parameter col, leaving set of data from a specific region in one color. 

Note. The code as written above does not work on my version of R studio. But it works as the following: plot(x=df$Year,y=df$Land.Valuecol=(as.factor(df$region)))
